package st1920.automaton;

import static org.junit.Assert.*;

import org.junit.Test;

public class Task3_all {

	@Test
	public void bug1() {												 
		assertTrue(RegExpMatcher.matches("", ""));
	}
	@Test
	public void bug2() {												 
		assertFalse(RegExpMatcher.matches("a", ""));
	}
	@Test
	public void bug3() {												 
		assertFalse(RegExpMatcher.matches("abc", "(cd)|(yz)"));
	}
	@Test
	public void bug4() {												
		assertFalse(RegExpMatcher.matches("hef123", "~h\\~f\\.123"));
	}
	
	@Test
	public void bug5() {												 
		assertFalse(RegExpMatcher.matches("abc", "[a- ]" ));	
	}
	
	//exceeds 100 chars
	@Test
	public void bug6() {												 
		assertFalse(RegExpMatcher.matches("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111", "([a-z])*"));
	}
	@Test
	public void bug7() {												 
		assertFalse(RegExpMatcher.matches("xyzxyzxyzxyzxyz", "(xyz){-21,-4}"));
	}
	@Test
	public void bug8() {												 
		assertTrue(RegExpMatcher.matches("abc", "([a-z])**"));
	}
	@Test
	public void bug9() {												 
		assertTrue(RegExpMatcher.matches("abc@xyz", "(<a-c>)\\.([a-z])"));
	}
	@Test
	public void bug10() {												 
		assertTrue(RegExpMatcher.matches("42", "([0-9])+"));
	}
	@Test
	public void bug11() {												 
		assertFalse(RegExpMatcher.matches("abcabcabca", "(abc)?\\."));
	}
	@Test
	public void bug12() {												 
		assertFalse(RegExpMatcher.matches("abcdef", "((abc)|(deg))&(abd)"));
	}
	@Test
	public void bug13() {												 
		assertFalse(RegExpMatcher.matches("abc123", "()+(<0-9>)*"));
	}
	@Test
	public void bug14() {												 
		assertFalse(RegExpMatcher.matches("abc", "([a^e-z])([^5-9)bc++?"));
	}
	@Test
	public void bug15() {												 
		assertFalse(RegExpMatcher.matches("abc", "(ab)&(bc)"));
	}


	@Test	
	public void test1() {												//bug 3
		assertFalse(RegExpMatcher.matches("abc", "(yz)|(ab)"));
 	}
	
	@Test
	public void test2() {												//bug 3
		assertFalse(RegExpMatcher.matches("abc", "(cd)|(yz)"));
	}

	@Test
	public void test3() {												//bug 15
		assertFalse(RegExpMatcher.matches("abc", "(ab)&(bc)"));
	}
	
	@Test
	public void test4() {												//bug 15
		assertFalse(RegExpMatcher.matches("abc", "(gh)&(ab)"));
	}
	
	@Test
	public void test5() {
		assertTrue(RegExpMatcher.matches("xyzxyzxyz", "(xyz){3}"));
	}
	
	@Test
	public void test6() {
		assertTrue(RegExpMatcher.matches("xyzxyzxyz", "(xyz){2,4}"));
	}
	
	@Test
	public void test7() {
		assertFalse(RegExpMatcher.matches("xyzxyzxyz", "(xyz){2}"));
	}
	
	@Test
	public void test8() {
		assertFalse(RegExpMatcher.matches("xyzxyz", "(xyz){3}"));
	}
	
	@Test
	public void test9() {
		assertTrue(RegExpMatcher.matches("xyzxyz", "(xyz){2,4}"));
	}
	
	@Test
	public void test10() {
		assertTrue(RegExpMatcher.matches("xyzxyzxyzxyz", "(xyz){2,4}"));
	}
	
	@Test
	public void test11() {
	        assertTrue(
	                st1920.automaton.RegExpMatcher.matches(
	                "ab+?",
	                "ab\"+\"\"?\""
	                ));
	 }
	
	@Test
	public void test12() {															//bug 3
		assertTrue(RegExpMatcher.matches("a9", "([a-z0-9])+"));
	}
	
	@Test
	public void test13() {															
		assertFalse(RegExpMatcher.matches("a9", "[A-Z]"));
	}
	
	@Test
	public void test14() {															//bug 3
		assertFalse(RegExpMatcher.matches("65", "[a-zA-Z]"));
	}
	
	@Test
	public void test15() {															//bug 3
		assertFalse(RegExpMatcher.matches("65", "[^b-z0-8]"));
	}
	
	@Test
	public void test16() {															//bug 15
		assertTrue(RegExpMatcher.matches("abcc", "abc+"));
	}
 	@Test
	public void test17() {
		assertFalse(RegExpMatcher.matches("ab", "abc+"));
	}
 	
	@Test
	public void test18() {															//bug 11
		assertFalse(RegExpMatcher.matches("abcc", "abc?"));
	}
	
	@Test
	public void test19() {															
		assertTrue(RegExpMatcher.matches("ab", "abc*"));
	}
	
	@Test
	public void test20() {															//bug 3
		assertTrue(RegExpMatcher.matches("bubble", "b[aeiou]bble"));
	}
	
	@Test
	public void test21() {															//bug 15
		assertFalse(RegExpMatcher.matches("b98c", "<90-100>"));
	}
	
	@Test
	public void test22() {															//bug 15
		assertTrue(RegExpMatcher.matches("c", "."));
	}
	
	@Test
	public void test23() {															//bug 8
		assertTrue(RegExpMatcher.matches("abc", "([a-z])***"));
	}
	
	@Test
	public void test24() {															
		assertTrue(RegExpMatcher.matches("hello", "hello"));
	} 
	
	@Test
	public void test25() {															//bug 15
		assertTrue(RegExpMatcher.matches("c", "@"));
	}
	
	@Test
	public void test26() {															//bug 3
		assertFalse(RegExpMatcher.matches("hello", "[~hello]"));
	}
	
	@Test
	public void test27() {															//bug 15
		assertFalse(RegExpMatcher.matches("abcasdas", "#"));
	}
	
	@Test
	public void test28() {															//bug 12
		assertFalse(RegExpMatcher.matches("abcdef", "((abc)&(deg))|(abd)"));
	}
	
	@Test
	public void test29() {															//bug 15
		assertTrue(RegExpMatcher.matches("abc123", "([a-z])+(<0-9>)*"));
	}
	
	@Test
	public void test30() {
		assertTrue(RegExpMatcher.matches("bubble", "b[a.eiou]bble"));
	}
	
	@Test
	public void test31() {															//bug 4
		assertFalse(RegExpMatcher.matches("hef123", "~h\\~f\\.123"));
	}
	
	@Test
	public void test32() {															//bug 14
		assertTrue(RegExpMatcher.matches("abcd1234", "([^e-z])([^5-9)"));
	}
	
	@Test
	public void test33() {
		assertTrue(RegExpMatcher.matches("xyz:", "(xyz)."));
	}
	
	@Test 
	public void test34() {
		assertTrue(RegExpMatcher.matches("abc123", "<[(\\+-\\?)(bb-d)]>"));
	}
	 
	@Test
	public void test35() {															//bug 15
		assertFalse(RegExpMatcher.matches("abc@xyz", "(\"abc@xyz\") "));
	}
	
	@Test
	public void test36() {															//bug 7
		assertTrue(RegExpMatcher.matches("abcabc", "(...){1-4}"));
	}
	
	@Test
	public void test37() {															//bug 7
		assertTrue(RegExpMatcher.matches("abcabc", "(~##){1-4}"));
	}
	
	@Test
	public void test38() {															//bug 4
		assertFalse(RegExpMatcher.matches("abcabc", "{6-4}"));
	}
	
	@Test
	public void test39() {															//bug 9
		assertTrue(RegExpMatcher.matches("abcABC", "(\"abc\")(<d-Z>){1-5}"));
	}
	
	@Test 
	public void test40() {
		assertTrue(RegExpMatcher.matches("abc123", "<abc1234>"));
	}
 
	@Test
	public void test41() {															
		assertTrue(RegExpMatcher.matches("a", "([a-z])"));
	}
	
	@Test 
	public void test42() {
		assertFalse(RegExpMatcher.matches("abc123", "[<(1-9),(11-14)>]"));
	}
 
	@Test
	public void test43() {															//bug 12
		assertFalse(RegExpMatcher.matches("abcdef", "((abc)&(def))?"));
	}
	
	@Test
	public void test44() {															//bug 9
		assertTrue(RegExpMatcher.matches("www.abc.com", "(<w-w>){1-3}.([a-c])\\?\\.(com)"));
	}
	
	@Test
	public void test45() {															//bug 15
		assertFalse(RegExpMatcher.matches("abc", "(abc)&(#\\@)" ));
	}
	
	@Test
	public void test46() {															//bug 15
		assertTrue(RegExpMatcher.matches("abc", "(~ @)" ));
	}
	
	@Test
	public void test47() {															//bug 4
		assertTrue(RegExpMatcher.matches("abc123", "\"abc\"(123)" ));
	}
	
	@Test
	public void test48() {															//bug 11
		assertTrue(RegExpMatcher.matches("abc", "([a-z])+?"));
	}
	 
	@Test
	public void test49() {															//bug 9
		assertTrue(RegExpMatcher.matches("123", "(<1--4>)8" ));
	}
	
	@Test
	public void test50() {
		assertTrue(RegExpMatcher.matches("foo.", "foo@"));
	}
	
	@Test
	public void test51() {															//bug 5
		assertTrue(RegExpMatcher.matches("Foo", "([A- ])([a-z]){1-15}"));
	}
	
	@Test
	public void test52() {															//bug 12	
		assertFalse(RegExpMatcher.matches("c", "((a).|(bb))&\\~c"));
	}
	
	@Test
	public void test53() {
		assertFalse(RegExpMatcher.matches("a", ".(hello)"));
	}
	
	@Test
	public void test54() {															//bug 11
		assertFalse(RegExpMatcher.matches("$ï¿½", "[!-*]?"));
	}
	
	@Test
	public void test55() {															//bug 7
		assertTrue(RegExpMatcher.matches("abc123", "([a-z]){1-5}(<>){1-5}"));
	}
	
	@Test
	public void test56() {															//bug 7			
		assertTrue(RegExpMatcher.matches("abc123", "([a-z]){1-5}(<0-9>){1-5}"));
	}
	
	@Test
	public void test57() {															//bug 7
		assertTrue(RegExpMatcher.matches("abc123", "([-]){1-5}(<0-9>){1-5}"));
	}
	
	@Test
	public void test58() {															//bug 7
		assertTrue(RegExpMatcher.matches("abc123", "([a]){1-5}(<0-9>){1-5}"));
	}
	
	@Test
	public void test59() {															//bug 14
		assertTrue(RegExpMatcher.matches("abc123", "([]){1-5}(<0-9>){1-5}"));
	}
	
	@Test	
	public void test60() {															//bug 7
		assertTrue(RegExpMatcher.matches("abc123", "([a-z]){}(<0-9>){1-5}"));
	}
	
	//bug with the number 42....
	@Test
	public void test61() {															//bug 10
		for(int i =0;i<200;i++) {
			boolean dummy = RegExpMatcher.matches(String.valueOf(i), "([0-9])+");
			if(!dummy) {
				//System.err.print(i);
 				assertTrue(dummy);	
				}
			else {
				//System.out.println("no bug on index "+i);
			}
			
		}
		//System.out.println("hello");
		//assertTrue(RegExpMatcher.matches("", "([0-9])+"));
	}
	
	@Test
	public void test62() {															//bug 15
		for(char c= 'a';c<='z';c++) {
		//System.out.println(c);
			boolean dummy = RegExpMatcher.matches(String.valueOf(c), "([a-z])+");
			//stops at c, works fine after
		}
	}
	
	@Test
	public void test63() {															//bug 15
		assertTrue(RegExpMatcher.matches("abc", "([a-z])++"));
	}
	
	@Test
	public void test64() {															//bug 11
		assertFalse(RegExpMatcher.matches("abc", "([a-z])??"));
	}
	
	@Test
	public void test65() {															//bug 11
		assertTrue(RegExpMatcher.matches("abc", "([a-z])*?"));
	}
	
	@Test
	public void test66() {															//bug 8
		assertFalse(RegExpMatcher.matches("aâ†�â†‘â�…â†‘â†“â†±â†¯â‡‚â‡¢â‡¥â‡�!", "aâ†�â†‘â�…â†‘â†“([a-z0-9])*"));
	}


	
    public static boolean debug = false;
    
    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeCharClass("");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeCharClass("");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeNot("");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeEntireString("");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeOr("", "");
        java.lang.Class<?> wildcardClass3 = rEString2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        java.lang.Class<?> wildcardClass10 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        java.lang.Class<?> wildcardClass1 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeNone("");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeNot("");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        java.lang.Class<?> wildcardClass10 = rEString8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeOr("hi!", "");
        java.lang.Class<?> wildcardClass3 = rEString2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("hi!");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeAnd("", "");
        java.lang.Class<?> wildcardClass3 = rEString2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString16);
        st1920.automaton.REString rEString20 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeAny("");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        java.lang.Class<?> wildcardClass20 = rEString18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        java.lang.Class<?> wildcardClass24 = rEString22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeNot("");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        java.lang.Class<?> wildcardClass20 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeNumClass("hi!");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        java.lang.Class<?> wildcardClass13 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString16);
        java.lang.Class<?> wildcardClass18 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeNone("hi!");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        java.lang.Class<?> wildcardClass10 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        java.lang.Class<?> wildcardClass1 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        java.lang.Class<?> wildcardClass21 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        java.lang.Class<?> wildcardClass4 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        java.lang.Class<?> wildcardClass14 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        java.lang.Class<?> wildcardClass21 = rEString19.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        java.lang.Class<?> wildcardClass13 = rEString11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        java.lang.Class<?> wildcardClass27 = rEString25.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        java.lang.Class<?> wildcardClass28 = rEString25.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeNot("");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString39);
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString39);
        boolean boolean42 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString39);
        java.lang.Class<?> wildcardClass43 = rEString39.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        java.lang.Class<?> wildcardClass27 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        java.lang.Class<?> wildcardClass21 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString16);
        java.lang.Class<?> wildcardClass18 = rEString16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("hi!");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString39);
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString39);
        boolean boolean42 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString39);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeOr("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString22);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString29);
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        java.lang.Class<?> wildcardClass32 = rEString29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        java.lang.Class<?> wildcardClass60 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        java.lang.Class<?> wildcardClass27 = rEString25.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        java.lang.Class<?> wildcardClass28 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeCharClass("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        java.lang.Class<?> wildcardClass31 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        java.lang.Class<?> wildcardClass24 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString24);
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString24);
        java.lang.Class<?> wildcardClass27 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString24);
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString24);
        st1920.automaton.REString rEString27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString68);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString75 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString73, rEString75);
        st1920.automaton.REString rEString78 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString73, rEString78);
        st1920.automaton.REString rEString81 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean82 = st1920.automaton.RegExpMatcher.matches(matchString73, rEString81);
        boolean boolean83 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString81);
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString81);
        java.lang.Class<?> wildcardClass85 = rEString81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString48);
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString48);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString48);
        java.lang.Class<?> wildcardClass52 = rEString48.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString19);
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString53);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString56);
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString60);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString64);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString67);
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString67);
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString67);
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString67);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString28);
        java.lang.Class<?> wildcardClass30 = rEString28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        java.lang.Class<?> wildcardClass10 = rEString8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.showOccurence("");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString24);
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString24);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString42);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString46);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString46);
        st1920.automaton.REString rEString49 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        java.lang.Class<?> wildcardClass17 = rEString15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString48);
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString48);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString48);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        java.lang.Class<?> wildcardClass21 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString65);
        java.lang.Class<?> wildcardClass68 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        java.lang.Class<?> wildcardClass18 = rEString15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeNot("hi!");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString21);
        java.lang.Class<?> wildcardClass24 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        java.lang.Class<?> wildcardClass52 = rEString49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        java.lang.Class<?> wildcardClass53 = rEString49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        java.lang.Class<?> wildcardClass25 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString65);
        java.lang.Class<?> wildcardClass68 = rEString65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString9);
        st1920.automaton.REString rEString13 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean14 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString13);
        st1920.automaton.REString rEString17 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean18 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString17);
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString17);
        java.lang.Class<?> wildcardClass20 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString45);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString48);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString52);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString56);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString59);
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString59);
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString59);
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString59);
        java.lang.Class<?> wildcardClass64 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        java.lang.Class<?> wildcardClass21 = rEString19.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        java.lang.Class<?> wildcardClass4 = rEString2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeNone("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        java.lang.Class<?> wildcardClass24 = rEString22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString34 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean35 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString34);
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString46);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString46);
        java.lang.Class<?> wildcardClass49 = rEString46.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString9);
        st1920.automaton.REString rEString13 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean14 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString13);
        st1920.automaton.REString rEString17 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean18 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString17);
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString17);
        java.lang.Class<?> wildcardClass20 = rEString17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        java.lang.Class<?> wildcardClass49 = rEString45.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        java.lang.Class<?> wildcardClass49 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.REString rEString49 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        java.lang.Class<?> wildcardClass27 = rEString25.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeCharClass("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        java.lang.Class<?> wildcardClass31 = rEString29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString26);
        java.lang.Class<?> wildcardClass28 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString55);
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString55);
        java.lang.Class<?> wildcardClass58 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString49);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString52);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString55);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString59);
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString63);
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString66);
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString66);
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString66);
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString66);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString71, rEString73);
        st1920.automaton.REString rEString76 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString71, rEString76);
        st1920.automaton.REString rEString79 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString71, rEString79);
        st1920.automaton.REString rEString83 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString71, rEString83);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString87 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean88 = st1920.automaton.RegExpMatcher.matches(matchString85, rEString87);
        st1920.automaton.REString rEString90 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean91 = st1920.automaton.RegExpMatcher.matches(matchString85, rEString90);
        st1920.automaton.REString rEString93 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean94 = st1920.automaton.RegExpMatcher.matches(matchString85, rEString93);
        boolean boolean95 = st1920.automaton.RegExpMatcher.matches(matchString71, rEString93);
        st1920.automaton.REString rEString97 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean98 = st1920.automaton.RegExpMatcher.matches(matchString71, rEString97);
        boolean boolean99 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString42);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString46);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString57);
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString60);
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString65, rEString67);
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString65, rEString70);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString65, rEString73);
        st1920.automaton.REString rEString76 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString65, rEString76);
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString76);
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString76);
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString76);
        java.lang.Class<?> wildcardClass81 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        java.lang.Class<?> wildcardClass17 = rEString15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString42);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        java.lang.Class<?> wildcardClass17 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        java.lang.Class<?> wildcardClass28 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeCharClass("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        java.lang.Class<?> wildcardClass24 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString65);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString70);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString77 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString75, rEString77);
        st1920.automaton.REString rEString80 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString75, rEString80);
        st1920.automaton.REString rEString83 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString75, rEString83);
        boolean boolean85 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString83);
        st1920.automaton.REString rEString87 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean88 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString87);
        boolean boolean89 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString87);
        java.lang.Class<?> wildcardClass90 = rEString87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        java.lang.Class<?> wildcardClass21 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeNone("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString42);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString57);
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString60);
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString63);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString67);
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString70);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString73);
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString73);
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString73);
        st1920.automaton.REString rEString78 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString43);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString47);
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString47);
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString47);
        java.lang.Class<?> wildcardClass51 = rEString47.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString10 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean11 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString10);
        st1920.automaton.REString rEString13 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean14 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString13);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString16);
        st1920.automaton.REString rEString20 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean21 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString20);
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString26);
        boolean boolean28 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString26);
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeCharClass("");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString30);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        java.lang.Class<?> wildcardClass3 = rEString2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString58);
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString61);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString64);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString67);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString71);
        st1920.automaton.REString rEString75 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString75);
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString75);
        java.lang.Class<?> wildcardClass78 = rEString75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        java.lang.Class<?> wildcardClass24 = rEString22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString68);
        st1920.automaton.REString rEString72 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString72);
        st1920.automaton.REString rEString75 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString75);
        st1920.automaton.REString rEString79 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString79);
        st1920.automaton.REString rEString82 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean83 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString82);
        st1920.automaton.REString rEString85 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("hi!");
        boolean boolean86 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString85);
        boolean boolean87 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString85);
        java.lang.Class<?> wildcardClass88 = rEString85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString45);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString48);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString52);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString56);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString59);
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString59);
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString59);
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString59);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString66);
        st1920.automaton.REString rEString69 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString69);
        st1920.automaton.REString rEString72 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString72);
        st1920.automaton.REString rEString76 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString76);
        st1920.automaton.REString rEString79 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString79);
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString79);
        st1920.automaton.REString rEString82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString9);
        st1920.automaton.REString rEString13 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean14 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString17 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean18 = st1920.automaton.RegExpMatcher.matches(matchString15, rEString17);
        st1920.automaton.REString rEString20 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean21 = st1920.automaton.RegExpMatcher.matches(matchString15, rEString20);
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString15, rEString23);
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString23);
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString23);
        java.lang.Class<?> wildcardClass27 = rEString23.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        java.lang.Class<?> wildcardClass3 = rEString2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        st1920.automaton.REString rEString1 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        java.lang.Class<?> wildcardClass2 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString65);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString70);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString77 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString75, rEString77);
        st1920.automaton.REString rEString80 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString75, rEString80);
        st1920.automaton.REString rEString83 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString75, rEString83);
        boolean boolean85 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString83);
        st1920.automaton.REString rEString87 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean88 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString87);
        boolean boolean89 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString87);
        st1920.automaton.REString rEString91 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean92 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString55);
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString55);
        java.lang.Class<?> wildcardClass58 = rEString55.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        java.lang.Class<?> wildcardClass52 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeOr("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString24);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString28);
        st1920.automaton.REString rEString31 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean32 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString31);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString38);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString49);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString52);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString55);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString59);
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString65, rEString67);
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString65, rEString70);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString65, rEString73);
        st1920.automaton.REString rEString76 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString65, rEString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString80 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString78, rEString80);
        st1920.automaton.REString rEString83 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString78, rEString83);
        st1920.automaton.REString rEString86 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean87 = st1920.automaton.RegExpMatcher.matches(matchString78, rEString86);
        st1920.automaton.REString rEString89 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean90 = st1920.automaton.RegExpMatcher.matches(matchString78, rEString89);
        boolean boolean91 = st1920.automaton.RegExpMatcher.matches(matchString65, rEString89);
        boolean boolean92 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString89);
        boolean boolean93 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString89);
        boolean boolean94 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString14 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean15 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString16, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString16, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString16, rEString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString26, rEString28);
        st1920.automaton.REString rEString31 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean32 = st1920.automaton.RegExpMatcher.matches(matchString26, rEString31);
        st1920.automaton.REString rEString34 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean35 = st1920.automaton.RegExpMatcher.matches(matchString26, rEString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString38);
        st1920.automaton.REString rEString41 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean42 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString41);
        st1920.automaton.REString rEString44 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString44);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString48);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString52);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString55);
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString26, rEString55);
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString16, rEString55);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString55);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString68);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString71);
        st1920.automaton.REString rEString75 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString79 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString77, rEString79);
        st1920.automaton.REString rEString82 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean83 = st1920.automaton.RegExpMatcher.matches(matchString77, rEString82);
        st1920.automaton.REString rEString85 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean86 = st1920.automaton.RegExpMatcher.matches(matchString77, rEString85);
        boolean boolean87 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString85);
        boolean boolean88 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString85);
        java.lang.Class<?> wildcardClass89 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString57);
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString60);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString66, rEString68);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString66, rEString71);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString66, rEString74);
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString74);
        st1920.automaton.REString rEString78 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString78);
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString78);
        java.lang.Class<?> wildcardClass81 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        java.lang.Class<?> wildcardClass27 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString28);
        java.lang.Class<?> wildcardClass30 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString12);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString52);
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString52);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString57);
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString60);
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString63);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString67);
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString70);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString55, rEString74);
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString74);
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeCharClass("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString43);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString47);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeCharClass("");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString53);
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString53);
        java.lang.Class<?> wildcardClass56 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString68);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString75 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString73, rEString75);
        st1920.automaton.REString rEString78 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString73, rEString78);
        st1920.automaton.REString rEString81 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean82 = st1920.automaton.RegExpMatcher.matches(matchString73, rEString81);
        boolean boolean83 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString81);
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString81);
        java.lang.Class<?> wildcardClass85 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString44 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString44);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString47);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString53);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString56);
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString56);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString56);
        java.lang.Class<?> wildcardClass60 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString36);
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString36);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString44 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString44);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString47);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString50);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString50);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString55);
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString58);
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString61);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString64);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString68);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString71);
        st1920.automaton.REString rEString75 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString75);
        st1920.automaton.REString rEString78 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString78);
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString78);
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString78);
        java.lang.Class<?> wildcardClass82 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString39);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString47);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString57);
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString60);
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString60);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString64);
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString64);
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeOr("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString45);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString48);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString52);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString56);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString59);
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString59);
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString59);
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString59);
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString66);
        java.lang.Class<?> wildcardClass68 = rEString66.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        java.lang.Class<?> wildcardClass60 = rEString57.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString21);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString38);
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        java.lang.Class<?> wildcardClass13 = rEString11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString60);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString64);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString67);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString71);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString74);
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString55);
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString55);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString60);
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString63);
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString66);
        st1920.automaton.REString rEString69 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString69);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString73);
        st1920.automaton.REString rEString76 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString76);
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString76);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString81 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean82 = st1920.automaton.RegExpMatcher.matches(matchString79, rEString81);
        st1920.automaton.REString rEString84 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean85 = st1920.automaton.RegExpMatcher.matches(matchString79, rEString84);
        st1920.automaton.REString rEString87 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean88 = st1920.automaton.RegExpMatcher.matches(matchString79, rEString87);
        st1920.automaton.REString rEString90 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean91 = st1920.automaton.RegExpMatcher.matches(matchString79, rEString90);
        boolean boolean92 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString35);
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString35);
        java.lang.Class<?> wildcardClass38 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString24);
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString24);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString42);
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString42);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString46);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString46);
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString51);
        st1920.automaton.REString rEString53 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString43);
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString43);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString47);
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString47);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString52);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString55);
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString58);
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString62);
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString66);
        st1920.automaton.REString rEString69 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString69);
        st1920.automaton.REString rEString72 = st1920.automaton.RegExpMatcher.makeCharClass("");
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString72);
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString20 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean21 = st1920.automaton.RegExpMatcher.matches(matchString18, rEString20);
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString18, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString18, rEString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString43);
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString43);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString68);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString71);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString74);
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString74);
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString18, rEString74);
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString74);
        java.lang.Class<?> wildcardClass79 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        java.lang.Class<?> wildcardClass25 = rEString22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        java.lang.Class<?> wildcardClass13 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString48);
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString48);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString48);
        java.lang.Class<?> wildcardClass52 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString22);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString47);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString53);
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString53);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString61);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString66, rEString68);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString66, rEString71);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString66, rEString74);
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString74);
        st1920.automaton.REString rEString78 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString78);
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString78);
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString78);
        boolean boolean82 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString26);
        java.lang.Class<?> wildcardClass28 = rEString26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        java.lang.Class<?> wildcardClass28 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString38);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString45);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString52);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString55);
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString58);
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString69 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString69);
        st1920.automaton.REString rEString72 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString72);
        st1920.automaton.REString rEString75 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString75);
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString75);
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString75);
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString75);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString82 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean83 = st1920.automaton.RegExpMatcher.matches(matchString80, rEString82);
        st1920.automaton.REString rEString85 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean86 = st1920.automaton.RegExpMatcher.matches(matchString80, rEString85);
        st1920.automaton.REString rEString88 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean89 = st1920.automaton.RegExpMatcher.matches(matchString80, rEString88);
        st1920.automaton.REString rEString92 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean93 = st1920.automaton.RegExpMatcher.matches(matchString80, rEString92);
        st1920.automaton.REString rEString96 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean97 = st1920.automaton.RegExpMatcher.matches(matchString80, rEString96);
        boolean boolean98 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString36);
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString36);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString40);
        boolean boolean42 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString40);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString49);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString52);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString56);
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString60);
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString43, rEString60);
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString60);
        java.lang.Class<?> wildcardClass64 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString22);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString29);
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString34 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean35 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString34);
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString40);
        st1920.automaton.REString rEString44 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString44);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString47);
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        java.lang.Class<?> wildcardClass60 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString43);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString47);
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString47);
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString47);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString51, rEString53);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString51, rEString56);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString51, rEString59);
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString51, rEString63);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString51, rEString67);
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString67);
        java.lang.Class<?> wildcardClass70 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString43);
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString43);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString58);
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString61);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString64);
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString64);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString68);
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString68);
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString68);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.showOccurence("");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString38);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString45);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString49);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString54, rEString56);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString54, rEString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString61, rEString63);
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString61, rEString66);
        st1920.automaton.REString rEString69 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString61, rEString69);
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString54, rEString69);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString54, rEString73);
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString73);
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString28);
        st1920.automaton.REString rEString31 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean32 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString33, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString33, rEString38);
        st1920.automaton.REString rEString41 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean42 = st1920.automaton.RegExpMatcher.matches(matchString33, rEString41);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString33, rEString45);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString33, rEString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString52);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString55);
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString50, rEString58);
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString33, rEString58);
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString58);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString62, rEString64);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString62, rEString67);
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString62, rEString70);
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString70);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString75 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString73, rEString75);
        st1920.automaton.REString rEString78 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString73, rEString78);
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString78);
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        java.lang.Class<?> wildcardClass13 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        st1920.automaton.REString rEString53 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString45);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString48);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString52);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString56);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString59);
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString30, rEString59);
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString59);
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString59);
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString70);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString73);
        st1920.automaton.REString rEString76 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString76);
        st1920.automaton.REString rEString80 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString80);
        st1920.automaton.REString rEString83 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString83);
        boolean boolean85 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeCharClass("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString49);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString52);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString57, rEString59);
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString57, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString57, rEString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString69 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString69);
        st1920.automaton.REString rEString72 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString72);
        st1920.automaton.REString rEString75 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString75);
        st1920.automaton.REString rEString79 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString79);
        st1920.automaton.REString rEString83 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString83);
        st1920.automaton.REString rEString86 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean87 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString86);
        boolean boolean88 = st1920.automaton.RegExpMatcher.matches(matchString57, rEString86);
        boolean boolean89 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString86);
        boolean boolean90 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString86);
        boolean boolean91 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString86);
        java.lang.Class<?> wildcardClass92 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString22);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString29);
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString34 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean35 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString34);
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString40);
        st1920.automaton.REString rEString44 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString44);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString47);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString57);
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString60);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString64);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString71);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString74);
        st1920.automaton.REString rEString77 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString77);
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString52, rEString77);
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString77);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString83 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString81, rEString83);
        st1920.automaton.REString rEString86 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean87 = st1920.automaton.RegExpMatcher.matches(matchString81, rEString86);
        st1920.automaton.REString rEString89 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean90 = st1920.automaton.RegExpMatcher.matches(matchString81, rEString89);
        boolean boolean91 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString89);
        boolean boolean92 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString89);
        java.lang.Class<?> wildcardClass93 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString13 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean14 = st1920.automaton.RegExpMatcher.matches(matchString11, rEString13);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString11, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString11, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString33);
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString40);
        boolean boolean42 = st1920.automaton.RegExpMatcher.matches(matchString11, rEString40);
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString40);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString49);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString52);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString56);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString59);
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString66);
        st1920.automaton.REString rEString69 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString69);
        st1920.automaton.REString rEString72 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString72);
        st1920.automaton.REString rEString76 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString76);
        st1920.automaton.REString rEString79 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString83 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString81, rEString83);
        st1920.automaton.REString rEString86 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean87 = st1920.automaton.RegExpMatcher.matches(matchString81, rEString86);
        st1920.automaton.REString rEString89 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean90 = st1920.automaton.RegExpMatcher.matches(matchString81, rEString89);
        boolean boolean91 = st1920.automaton.RegExpMatcher.matches(matchString64, rEString89);
        boolean boolean92 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString89);
        st1920.automaton.REString rEString94 = st1920.automaton.RegExpMatcher.makeNumClass("hi!");
        boolean boolean95 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString94);
        boolean boolean96 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString94);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString6);
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString22);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString29);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString46);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString50);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString58);
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString61);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString64);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString71);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString74);
        st1920.automaton.REString rEString77 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString77);
        st1920.automaton.REString rEString80 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString80);
        boolean boolean82 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString80);
        boolean boolean83 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString80);
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString80);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString87 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean88 = st1920.automaton.RegExpMatcher.matches(matchString85, rEString87);
        st1920.automaton.REString rEString90 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean91 = st1920.automaton.RegExpMatcher.matches(matchString85, rEString90);
        boolean boolean92 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString90);
        boolean boolean93 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString90);
        java.lang.Class<?> wildcardClass94 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString38);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        java.lang.Class<?> wildcardClass48 = rEString45.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString38);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString53);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString56);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString59);
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString39);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString46);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString53);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString61);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString64);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString67);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString71);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString74);
        st1920.automaton.REString rEString77 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString77);
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString77);
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString14 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean15 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString16, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString16, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString16, rEString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString26, rEString28);
        st1920.automaton.REString rEString31 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean32 = st1920.automaton.RegExpMatcher.matches(matchString26, rEString31);
        st1920.automaton.REString rEString34 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean35 = st1920.automaton.RegExpMatcher.matches(matchString26, rEString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString38);
        st1920.automaton.REString rEString41 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean42 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString41);
        st1920.automaton.REString rEString44 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString44);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString48);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString52);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString55);
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString26, rEString55);
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString16, rEString55);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString55);
        java.lang.Class<?> wildcardClass60 = rEString55.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString24);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString28);
        st1920.automaton.REString rEString31 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean32 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString31);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString49);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString52);
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString52);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString60);
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString63);
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString66);
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString66);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString71);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString74);
        st1920.automaton.REString rEString77 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString77);
        st1920.automaton.REString rEString80 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString80);
        st1920.automaton.REString rEString83 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString83);
        boolean boolean85 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString83);
        boolean boolean86 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString83);
        boolean boolean87 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString83);
        java.lang.Class<?> wildcardClass88 = rEString83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString58);
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString61);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString64);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString68);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString71);
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString71);
        java.lang.Class<?> wildcardClass74 = rEString71.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeEntireString("");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString54);
        java.lang.Class<?> wildcardClass56 = rEString54.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString46);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString46);
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString46);
        java.lang.Class<?> wildcardClass50 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString33);
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeCharClass("");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString47);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString53);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString57);
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString60);
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString63);
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString63);
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString29);
        java.lang.Class<?> wildcardClass31 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString32);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString36);
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString36);
        java.lang.Class<?> wildcardClass39 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString43);
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString43);
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString43);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString49);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString52);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString55);
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString68);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString71);
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString71);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString76 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString74, rEString76);
        st1920.automaton.REString rEString79 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString74, rEString79);
        st1920.automaton.REString rEString82 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean83 = st1920.automaton.RegExpMatcher.matches(matchString74, rEString82);
        st1920.automaton.REString rEString86 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean87 = st1920.automaton.RegExpMatcher.matches(matchString74, rEString86);
        st1920.automaton.REString rEString89 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean90 = st1920.automaton.RegExpMatcher.matches(matchString74, rEString89);
        st1920.automaton.REString rEString93 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean94 = st1920.automaton.RegExpMatcher.matches(matchString74, rEString93);
        boolean boolean95 = st1920.automaton.RegExpMatcher.matches(matchString47, rEString93);
        boolean boolean96 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString24);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString28);
        st1920.automaton.REString rEString31 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean32 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString31);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString49);
        st1920.automaton.REString rEString52 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString44, rEString52);
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString52);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString60 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean61 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString60);
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString63);
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString58, rEString66);
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString66);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString71);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString74);
        st1920.automaton.REString rEString77 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString77);
        st1920.automaton.REString rEString80 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString80);
        st1920.automaton.REString rEString83 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString69, rEString83);
        boolean boolean85 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString83);
        boolean boolean86 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString83);
        boolean boolean87 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString83);
        java.lang.Class<?> wildcardClass88 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString19);
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString27 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean28 = st1920.automaton.RegExpMatcher.matches(matchString25, rEString27);
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString25, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString25, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString25, rEString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString25, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString49);
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString45);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString37, rEString48);
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString48);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString48);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeAnd("", "");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString22);
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString30);
        boolean boolean32 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString30);
        java.lang.Class<?> wildcardClass33 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString46);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString50);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString54);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString38, rEString57);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString57);
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString57);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString63 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean64 = st1920.automaton.RegExpMatcher.matches(matchString61, rEString63);
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString61, rEString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString70);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString73);
        st1920.automaton.REString rEString76 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString76);
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString61, rEString76);
        st1920.automaton.REString rEString80 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean81 = st1920.automaton.RegExpMatcher.matches(matchString61, rEString80);
        boolean boolean82 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString45);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString19);
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString43);
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString43);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString47);
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString47);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString24);
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString24);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString42);
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString42);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString46);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString46);
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString54, rEString56);
        st1920.automaton.REString rEString59 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean60 = st1920.automaton.RegExpMatcher.matches(matchString54, rEString59);
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString54, rEString62);
        st1920.automaton.REString rEString66 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches(matchString54, rEString66);
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString54, rEString70);
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString53, rEString70);
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        java.lang.Class<?> wildcardClass13 = rEString11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString35);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString43);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString46);
        st1920.automaton.REString rEString49 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean50 = st1920.automaton.RegExpMatcher.matches(matchString41, rEString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString49);
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString49);
        java.lang.Class<?> wildcardClass53 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString17, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString25);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString44 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString44);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString47);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString53);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString42, rEString56);
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString10, rEString56);
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString56);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString62 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean63 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString62);
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString69 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString69);
        st1920.automaton.REString rEString72 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString72);
        st1920.automaton.REString rEString75 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString75);
        st1920.automaton.REString rEString79 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString79);
        st1920.automaton.REString rEString82 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean83 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString82);
        st1920.automaton.REString rEString85 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean86 = st1920.automaton.RegExpMatcher.matches(matchString67, rEString85);
        boolean boolean87 = st1920.automaton.RegExpMatcher.matches(matchString60, rEString85);
        boolean boolean88 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString85);
        java.lang.Class<?> wildcardClass89 = rEString85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString33);
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString37);
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString37);
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeAnd("", "");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString16);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString29);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString37 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean38 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString37);
        st1920.automaton.REString rEString40 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString40);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString35, rEString43);
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString43);
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString51);
        st1920.automaton.REString rEString54 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString58);
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString61);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString64);
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString64);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString68);
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches(matchString21, rEString68);
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString68);
        java.lang.Class<?> wildcardClass72 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString7 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean8 = st1920.automaton.RegExpMatcher.matches(matchString5, rEString7);
        st1920.automaton.REString rEString10 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean11 = st1920.automaton.RegExpMatcher.matches(matchString5, rEString10);
        st1920.automaton.REString rEString13 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean14 = st1920.automaton.RegExpMatcher.matches(matchString5, rEString13);
        st1920.automaton.REString rEString17 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean18 = st1920.automaton.RegExpMatcher.matches(matchString5, rEString17);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString5, rEString21);
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString26);
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString33);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString31, rEString39);
        boolean boolean41 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString39);
        st1920.automaton.REString rEString43 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString47);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString53);
        boolean boolean55 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString53);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString58 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean59 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString58);
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString61);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString64);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString67);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString71);
        st1920.automaton.REString rEString74 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString74);
        st1920.automaton.REString rEString78 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString78);
        st1920.automaton.REString rEString81 = st1920.automaton.RegExpMatcher.makeNumClass("");
        boolean boolean82 = st1920.automaton.RegExpMatcher.matches(matchString56, rEString81);
        boolean boolean83 = st1920.automaton.RegExpMatcher.matches(matchString24, rEString81);
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString4, rEString81);
        boolean boolean85 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString25);
        st1920.automaton.REString rEString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString28);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString32);
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeCharClass("");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString20, rEString42);
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString47 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString47);
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString53);
        st1920.automaton.REString rEString57 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString57);
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString65 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean66 = st1920.automaton.RegExpMatcher.matches(matchString63, rEString65);
        st1920.automaton.REString rEString68 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean69 = st1920.automaton.RegExpMatcher.matches(matchString63, rEString68);
        st1920.automaton.REString rEString71 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean72 = st1920.automaton.RegExpMatcher.matches(matchString63, rEString71);
        boolean boolean73 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString71);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString76 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean77 = st1920.automaton.RegExpMatcher.matches(matchString74, rEString76);
        boolean boolean78 = st1920.automaton.RegExpMatcher.matches(matchString45, rEString76);
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString18);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeAnd("", "hi!");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeAny("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.REString rEString35 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean36 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString35);
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString38);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString42);
        st1920.automaton.REString rEString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean46 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString45);
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString45);
        java.lang.Class<?> wildcardClass48 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString11 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString15);
        st1920.automaton.REString rEString18 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString18);
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeAnySingleChar("hi!");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString13, rEString24);
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString24);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString42);
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString42);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString46);
        boolean boolean48 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString46);
        java.lang.Class<?> wildcardClass49 = rEString46.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeCharClass("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        java.lang.Class<?> wildcardClass28 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString10 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean11 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString10);
        st1920.automaton.REString rEString13 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean14 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString13);
        st1920.automaton.REString rEString16 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString16);
        boolean boolean18 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString16);
        st1920.automaton.REString rEString20 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean21 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString20);
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString23);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString3 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString3);
        st1920.automaton.REString rEString6 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString6);
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString9);
        st1920.automaton.REString rEString13 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean14 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString13);
        st1920.automaton.REString rEString17 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean18 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString21 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean22 = st1920.automaton.RegExpMatcher.matches(matchString19, rEString21);
        st1920.automaton.REString rEString24 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString19, rEString24);
        st1920.automaton.REString rEString27 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean28 = st1920.automaton.RegExpMatcher.matches(matchString19, rEString27);
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString27);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.REString rEString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString8);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.REString rEString19 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean20 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString19);
        st1920.automaton.REString rEString22 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore("");
        boolean boolean23 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString22);
        st1920.automaton.REString rEString25 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("hi!");
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString29 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean30 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString29);
        st1920.automaton.REString rEString32 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString36 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString36);
        st1920.automaton.REString rEString39 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString39);
        st1920.automaton.REString rEString42 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString42);
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString42);
        st1920.automaton.REString rEString46 = st1920.automaton.RegExpMatcher.showOccurence("hi!");
        boolean boolean47 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString50 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString50);
        st1920.automaton.REString rEString53 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean54 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString53);
        st1920.automaton.REString rEString56 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString48, rEString56);
        boolean boolean58 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString61 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean62 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString61);
        st1920.automaton.REString rEString64 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean65 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString64);
        st1920.automaton.REString rEString67 = st1920.automaton.RegExpMatcher.makeAny("");
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString67);
        st1920.automaton.REString rEString70 = st1920.automaton.RegExpMatcher.makeAnySingleChar("");
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString70);
        st1920.automaton.REString rEString73 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean74 = st1920.automaton.RegExpMatcher.matches(matchString59, rEString73);
        boolean boolean75 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString73);
        st1920.automaton.REString rEString78 = st1920.automaton.RegExpMatcher.makeOr("hi!", "hi!");
        boolean boolean79 = st1920.automaton.RegExpMatcher.matches(matchString27, rEString78);
        boolean boolean80 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString78);
        java.lang.Class<?> wildcardClass81 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString2 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString2);
        st1920.automaton.REString rEString5 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString9 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString9);
        st1920.automaton.REString rEString12 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString12);
        st1920.automaton.REString rEString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("hi!");
        boolean boolean16 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString15);
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString20 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean21 = st1920.automaton.RegExpMatcher.matches(matchString18, rEString20);
        st1920.automaton.REString rEString23 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean24 = st1920.automaton.RegExpMatcher.matches(matchString18, rEString23);
        st1920.automaton.REString rEString26 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches(matchString18, rEString26);
        st1920.automaton.REString rEString30 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean31 = st1920.automaton.RegExpMatcher.matches(matchString18, rEString30);
        st1920.automaton.REString rEString33 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches(matchString18, rEString33);
        boolean boolean35 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeConcatenation();
        st1920.automaton.REString rEString38 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString38);
        st1920.automaton.REString rEString41 = st1920.automaton.RegExpMatcher.makeEntireString("hi!");
        boolean boolean42 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString41);
        st1920.automaton.REString rEString44 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne("");
        boolean boolean45 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString44);
        st1920.automaton.REString rEString48 = st1920.automaton.RegExpMatcher.makeOr("", "hi!");
        boolean boolean49 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString48);
        st1920.automaton.REString rEString51 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore("");
        boolean boolean52 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString51);
        st1920.automaton.REString rEString55 = st1920.automaton.RegExpMatcher.makeAnd("hi!", "hi!");
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString36, rEString55);
        boolean boolean57 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString55);
        java.lang.Class<?> wildcardClass58 = rEString55.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }
    
    
    @Test
	public void test0001() {
		assertTrue(RegExpMatcher.matches("", "\""));
	}
	
	@Test
	public void test0002() {
		assertTrue(RegExpMatcher.matches("abc", "(abc+"));
	}
	
	@Test
	public void test0003() {
		assertTrue(RegExpMatcher.matches("5", "<1-7"));
	}
	
	@Test
	public void test0004() {
		assertTrue(RegExpMatcher.matches("123", "<2>"));
	}
	
	@Test 
	public void test0005() {
		assertFalse(RegExpMatcher.matches("hello", "(([a-z]){1,})&(([A-Z]){0,})"));
	}

	@Test 
	public void test0006() {
		assertFalse(RegExpMatcher.matches("hello", "([a-])*"));
	}
	
	@Test 
	public void test0007() {
		assertTrue(RegExpMatcher.matches("k", "@?&k"));
	}

	@Test 
	public void test0008() {
		assertFalse(RegExpMatcher.matches("hello", "(hello)((?)\\|\\(+))"));
	}
	
	@Test 
	public void test0009() {
		assertFalse(RegExpMatcher.matches("hello", "(hello)((?)\\(~(&))\\(+))"));
	}
	
	@Test 
	public void test0010() {
		assertFalse(RegExpMatcher.matches("abcd", "([a-c])*\\&([a-d])+"));
	} 
	
	@Test
    public void tes0011() {
        assertTrue(RegExpMatcher.matches("a", "a{0,7}"));
    }

    @Test
    public void test0012() {
        assertTrue(RegExpMatcher.matches("hello", "([a-z])*&([a-z])*"));
    }
    
    @Test
    public void test0013() {
        assertTrue(RegExpMatcher.matches("hello", "([a-z])*&.*"));
    }
    
    @Test
    public void test0014() {
        assertTrue(RegExpMatcher.matches("hello", ".*&.*"));
    }
    
    @Test
    public void test0015() {
        assertFalse(RegExpMatcher.matches("03", "<0-0>"));
    }

 
 
 

 
 
 

}


